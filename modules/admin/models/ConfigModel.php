<?php
/**
 * Created by PhpStorm.
 * User: xiaohongyang
 * Date: 2016/12/9
 * Time: 21:15
 */

namespace app\modules\admin\models;


use yii\behaviors\TimestampBehavior;
use app\controllers\ConfigTrait;
use yii\log\Logger;

class ConfigModel extends BaseModel
{
    public function behaviors()
    {
        return [
            [
                'class' => TimestampBehavior::className()
            ]
        ];
    }


    public static function tableName()
    {
        return parent::getDbPrefix() . 'config';
    }

    /*[id] => 1
    [we_chat_app_id] => 1
    [we_chat_secret] =>
    [we_chat_token] =>
    [admin_mobile] =>
    [webName] =>
    [distance_limit] => 0
    [clock_time_limit] => 0
    [off_duty_limit] => 0
    [send_msg] => 0
    [created_at] => 0
    [updated_at] => 0*/
    public function attributeLabels()
    {
        return [
            'we_chat_app_id' =>  '微信开发者_app_id',
            'we_chat_secret' =>  '微信开发者_secret',
            'we_chat_token' =>  '微信开发者_token',
            'admin_mobile' =>  '管理员手机号',
            'webName' =>  'app名称',
            'distance_limit' =>  '匹配距离限制(m)',
            'clock_time_limit' =>  '上班打卡匹配时间限制(分钟)',
            'off_duty_limit' =>  '下班匹配时间限制(分钟)',
            'send_msg' =>  '',
        ];

    }


    public function scenarios()
    {
        return [
            self::SCENARIO_UPDATE => [
                'we_chat_app_id',
                'we_chat_secret',
                'we_chat_token',
                'admin_mobile',
                'webName',
                'distance_limit',
                'clock_time_limit',
                'off_duty_limit',
                'send_msg',
            ]
        ];
    }


    /**
     * 更新配置
     * @param $data
     * @return bool
     */
    public function edit($data) {

        if(!key_exists(self::formName(), $data)) {
            $data = [
                self::formName() => $data
            ];
        }

        $this->scenario = self::SCENARIO_UPDATE;
        $rs = false;
        if ($this->load($data) && $this->validate()) {
            $rs = $this->save();
        }
        return $rs;
    }

    public function getDistanceLimit(){
        return $this->distance_limit;
    }
    public function getClockTimeLimit(){
        return $this->clock_time_limit;
    }
    public function getOffDutyLimit(){
        return $this->off_duty_limit;
    }

    public function afterSave($insert, $changedAttributes)
    {
        parent::afterSave($insert, $changedAttributes); // TODO: Change the autogenerated stub
        \Yii::getLogger()->log($changedAttributes, Logger::LEVEL_INFO);

        ConfigTrait::configInit($this);
    }


}